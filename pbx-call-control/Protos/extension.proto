syntax = "proto3";
option csharp_namespace = "PbxApiControl";
package extension;
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

// Сервис для управления внутренними номерами (Extensions) PBX.
service ExtensionsPbxService {
    
    // Получить информацию о внутреннем номере.
    rpc GetExtensionInfo(GetExtensionInfoRequest) returns (ExtensionInfoReply);

    // Получить статус внутреннего номера.
    rpc GetExtensionStatus(GetExtensionStatusRequest) returns (ExtensionStatusReply);

    // Получить список всех внутренних номеров.
    rpc GetExtensions(google.protobuf.Empty) returns (GetExtensionsReply);

    // Получить список зарегистрированных внутренних номеров.
    rpc GetRegisteredExtensions(google.protobuf.Empty) returns (GetRegisteredExtensionsReply);

    // Получить информацию об устройствах которые зарегистрированны у данного внутреннего номера
    rpc GetExtensionDeviceInfo(GetExtensionDeviceInfoRequest) returns (GetExtensionDeviceInfoReply);

    // Создание нового внутреннего номера.
    rpc CreateExtension(CreateExtensionRequest) returns (ExtensionInfoReply);

    // Удалить внутренний номер.
    rpc DeleteExtension(DeleteExtensionRequest) returns (DeleteExtensionReply);

    // Обновляет информацию у внутреннего номера.
    rpc UpdateExtensionInfo(UpdateExtensionInfoRequest) returns (ExtensionInfoReply);

    // Устанавливает статус перенаправления вызовов у внутреннего номера.
    rpc SetExtensionForwardStatus(SetExtensionForwardStatusRequest) returns (ExtensionStatusReply);

    // Устанавливает глобальный статус очередей внутреннего номера.
    rpc SetExtensionGlobalQueuesStatus(SetExtensionGlobalQueuesStatusRequest) returns (ExtensionStatusReply);

    // Устанавливает статус внутреннего номера в очереди.
    rpc SetExtensionStatusInQueue(SetExtensionStatusInQueueRequest) returns (ExtensionStatusReply);
    
    // Устанавливает переадресацию вызовов у внутреннего номера.
    rpc SetExtensionCallForwardStatus(SetExtensionCallForwardStatusRequest) returns (ExtensionStatusReply);
}

// Запрос для установки статуса внутреннего номера в очереди.
message SetExtensionStatusInQueueRequest {
    // Внутренний номер.
    string extension = 1;
    // Номер очереди.
    string queue_number = 2;
    // Статус.
    ExtensionQueueStatus status = 3;
}

enum ExtensionQueueStatus {
    LoggedIn = 0;
    LoggedOut = 1;
}

// Запрос для установки глобального статуса очередей для внутреннего номера.
message SetExtensionGlobalQueuesStatusRequest {
    // Внутренний номер.
    string extension = 1;
    // Статус.
    ExtensionQueueStatus status = 2;
}

// Запрос для установки статуса перенаправления вызовов для внутреннего номера.
message SetExtensionForwardStatusRequest {
    // Внутренний номер.
    string extension = 1;
    // Статус переадресации внутреннего номера.
    ExtensionForwardStatus fw_status = 2;
}

enum ExtensionForwardStatus {
    Available   = 0;
    Away        = 1;
    DND         = 2;
    Lunch       = 3;
    BusinessTrip = 4;
}

// Запрос для обновления информации у внетреннего номера.
message UpdateExtensionInfoRequest {
    // Внутренний номер.
    string extension = 1;
    // Имя.
    google.protobuf.StringValue first_name = 2;
    // Фамилия.
    google.protobuf.StringValue last_name = 3;
    // Адрес электронной почты.
    google.protobuf.StringValue email = 4;
    // Идентификатор аутентификации.
    google.protobuf.StringValue auth_id = 5;
    // Пароль аутентификации.
    google.protobuf.StringValue auth_password = 6;
    // Мобильный номер.
    google.protobuf.StringValue mobile_number = 7;
    // Исходящий идентификатор вызывающего абонента.
    google.protobuf.StringValue outbound_caller_id = 8;
    // Тип записи.
    optional RecordingType recording_type = 9;
    // Включено ли внутренний номер.
    google.protobuf.BoolValue is_extension_enabled = 10;
    // Отключены ли внешние вызовы.
    google.protobuf.BoolValue disable_external_calls = 11;
    // Доставлять ли аудио.
    google.protobuf.BoolValue deliver_audio = 12;
    // Поддержка reinvite.
    google.protobuf.BoolValue support_reinvite = 13;
    // Поддержка replaces.
    google.protobuf.BoolValue support_replaces = 14;
}

// Запрос для удаления внутреннего номера.
message DeleteExtensionRequest {
    // Внутренний номер.
    string extension = 1;
}

// Ответ на запрос удаления внутреннего номера.
message DeleteExtensionReply {
    // Результат операции.
    bool result = 1;
}

// Запрос для создания внутреннего номера.
message CreateExtensionRequest {
    // Внутренний номер.
    string extension = 1;
    // Имя.
    string first_name = 2;
    // Фамилия.
    string last_name = 3;
    // Адрес электронной почты.
    string email = 4;
    // Идентификатор аутентификации.
    string auth_id = 5;
    // Пароль аутентификации.
    string auth_password = 6;
    // Мобильный номер.
    string mobile_number = 7;
    // Исходящий идентификатор вызывающего абонента.
    string outbound_caller_id = 8;
    // Тип записи.
    RecordingType recording_type = 9;
    // Включено ли внутренний номер.
    bool is_extension_enabled = 10;
    // Отключены ли внешние вызовы.
    bool disable_external_calls = 11;
    // Доставлять ли аудио.
    bool deliver_audio = 12;
    // Поддержка reinvite.
    bool support_reinvite = 13;
    // Поддержка replaces.
    bool support_replaces = 14;
}

// Ответ с информацией о внутреннем номере.
message ExtensionInfoReply {
    // Внутренний номер.
    string extension = 1;
    // Имя.
    string first_name = 2;
    // Фамилия.
    string last_name = 3;
    // Адрес электронной почты.
    string email = 4;
    // Идентификатор аутентификации.
    string auth_id = 5;
    // Пароль аутентификации.
    string auth_password = 6;
    // Мобильный номер.
    string mobile_number = 7;
    // SIP идентификатор.
    string sip_id = 8;
    // Исходящий идентификатор вызывающего абонента.
    string outbound_caller_id = 9;
    // Тип записи.
    RecordingType recording_type = 10;
    // Включено ли внутренний номер.
    bool is_extension_enabled = 11;
    // Отключены ли внешние вызовы.
    bool disable_external_calls = 12;
    // Доставлять ли аудио.
    bool deliver_audio = 13;
    // Поддержка reinvite.
    bool support_reinvite = 14;
    // Поддержка replaces.
    bool support_replaces = 15;
    // Опции электронной почты.
    EmailOptionsType email_options = 16;
    // Включена ли голосовая почта.
    bool voice_mail_enable = 17;
    // PIN код голосовой почты.
    string voice_mail_pin = 18;
    // Воспроизводить ли идентификатор вызывающего абонента в голосовой почте.
    bool voice_mail_play_caller_id = 19;
    // Является ли внутренним.
    bool internal = 20;
    // Тайм-аут без ответа.
    int32 no_answer_timeout = 21;
}

enum EmailOptionsType {
    None = 0;
    Notificatione = 1;
    Attachmente = 2;
    AttachmentAndDeletee = 3;
}

enum RecordingType {
    RecordingOff = 0;
    RecordingAll = 1;
    RecordingExternal = 2;
}
// Запрос для получения информации об устройствах которые зарегистрированны у  данного внутреннего номера.
message GetExtensionDeviceInfoRequest {
    // Внутренний номер.
    string extension = 1;
}

// Информация о устройстве.
message Device {
    // User Agent.
    string userAgent = 1;
    // Контакт.
    string contact = 2;
}

// Ответ с информацией об устройствах внутреннего номера.
message GetExtensionDeviceInfoReply {
    // Имя.
    string first_name = 1;
    // Фамилия.
    string last_name = 2;
    // Адрес электронной почты.
    string email = 3;
    // Внутренний номер.
    string extension = 4;
    // Список устройств.
    repeated Device devices = 5;
}

// Ответ с списком внутренних номеров.
message GetExtensionsReply {
    // Список внутренних номеров.
    repeated string extensions = 1;
}

// Ответ с списком зарегистрированных внутренних номерах.
message GetRegisteredExtensionsReply {
    // Список зарегистрированных внутренних номеров.
    repeated string extensions = 1;
}

// Запрос для получения статуса внутреннего номера.
message GetExtensionStatusRequest {
    // Внутренний номер.
    string extension = 1;
}

// Ответ с статусом внутреннего номера.
message ExtensionStatusReply {
    // Имя.
    string first_name = 1;
    // Фамилия.
    string last_name = 2;
    // Адрес электронной почты.
    string email = 3;
    // Внутренний номер.
    string extension = 4;
    // Зарегистрировано ли.
    bool registered = 5;
    // Статус правил перенаправления вызовов.
    ExtensionForwardStatus forwarding_rules_status = 6;
    // Статус очередей.
    ExtensionQueueStatus queues_status = 7;
    // Список групп.
    repeated string groups = 8;
    // Список групп вызова.
    repeated string in_ring_groups = 9;
    // Список очередей, в которые вошли.
    repeated string logged_in_queues = 10;
    // Список устройств.
    repeated Device devices = 11;
}

// Запрос для получения информации о внутреннем номере.
message GetExtensionInfoRequest {
    // Внутренний номер.
    string extension = 1;
}

// Запрос для установки маршрутизации для перенаправления вызовов у внутреннего номера.
message SetExtensionCallForwardStatusRequest {
    // Внутренний номер.
    string extension = 1;
    // Правило переадресации (DND,BusinessTrip ....).
    ExtensionForwardStatus fw_status = 2;
    // Переадресовывать на какой тип номеров (Extension, Mobile ....).
    FwToType fw_to = 3;
    // Передаресация для типов вызовов (External, Internal, Both).
    FwCallType fw_call = 4;
    // Состояние внутреннего номера(NoAnswer, Busy, NotRegistered).
    optional ExtensionStateType extension_state  = 5;
    // Номера на который нужно переадресаовать вызовы(в случае переадресаций на конкретные номера).
    optional string number = 6;
}

enum FwToType {
    Extension = 0;
    Queue = 1;
    IVR = 3;
    RingGroup = 4;
    Mobile  = 5;
    External  = 6;
    VoiceMail  = 7;
    EndCall = 8;
}

enum FwCallType {
    ExternalCall = 0;
    InternalCall = 1;
    BothCall = 2;
}

enum ExtensionStateType {
    NoAnswer = 0;
    BusyNotRegistered = 1;
}